{"version":3,"sources":["components/EmojisList/EmojiItem.module.css","components/common/Input.module.css","components/EmojiSearcher/EmojiSearcher.module.css","components/EmojisList/EmojisList.module.css","store/emojis/emojisStore.ts","store/emojis/emojisSetters.ts","store/emojis/emojisActions.ts","components/common/Input.tsx","components/EmojiSearcher/EmojiSearcher.tsx","components/EmojisList/EmojiItem.tsx","components/EmojisList/EmojisList.tsx","App.tsx","index.tsx"],"names":["module","exports","rawEmojis$","BehaviorSubject","emojiSearchResults$","searchLoading$","setEmojis$","pipe","map","emos","emo","keywordsArr","keywords","split","filter","keyw","index","self","indexOf","titleLowerCase","title","toLowerCase","searchEmojis","searchTerm","next","searchKeywords","trim","combineLatestWith","of","searchWords","relPoint","directMatchCount","emoKeywords","emoTitleTokens","forEach","sw","emott","startsWith","length","emok","sort","a","b","subscribe","searchResults","unsubscribe","Input","type","value","size","placeholder","isAutoFocus","props","inputClasses","cn","bind","s","cx","InputBig","className","onChange","e","target","autoFocus","EmojiSearcher","useState","setSearchTerm","Subject","onSearch$","searchLoading","useObservableState","useEffect","subscription","debounceTime","distinctUntilChanged","onSearchInputChange","EmojiItem","emoji","EmojiItemInner","EmojiItemSymbol","symbol","EmojiItemTitle","EmojisList","emojis","App","useLayoutEffect","emojiData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.959923cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmojiItem\":\"EmojiItem_EmojiItem__1DnGS\",\"EmojiItemInner\":\"EmojiItem_EmojiItemInner__22vZ_\",\"EmojiItemTitle\":\"EmojiItem_EmojiItemTitle__271ti\",\"EmojiItemSymbol\":\"EmojiItem_EmojiItemSymbol__2Ylk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3uZBM\",\"InputBig\":\"Input_InputBig__tPXku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmojiSearcher\":\"EmojiSearcher_EmojiSearcher__2TwDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EmojisList\":\"EmojisList_EmojisList__3CHEc\"};","import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n//setters\nimport { emojisSetter } from './emojisSetters';\n\n//types\nimport { IRawEmoji, IEmoji } from './emojis.types';\n\n//subjects\nexport const rawEmojis$ = new BehaviorSubject<IRawEmoji[]>([]);\nexport const emojiSearchResults$ = new BehaviorSubject<IEmoji[]>([]);\nexport const searchLoading$ = new BehaviorSubject<boolean>(false);\n\n//observables\nexport const setEmojis$ = rawEmojis$.pipe(\n\tmap(emos =>\n\t\temojisSetter(emos)\n\t)\n)\n","\n//types\nimport { IRawEmoji, IEmoji } from './emojis.types';\n\nexport const emojisSetter = (emojis: IRawEmoji[]): IEmoji[] => {\n\treturn emojis.map(emo => {\n\t\tconst rawKeywordsArr: string[] = emo.keywords.split(' ');\n\t\t//remove duplicate keywords\n\t\tconst keywordsArr: string[] = rawKeywordsArr.filter((keyw, index, self) => self.indexOf(keyw) === index);\n\t\treturn {\n\t\t\t...emo,\n\t\t\ttitleLowerCase: emo.title.toLowerCase(),\n\t\t\tkeywordsArr\n\t\t}\n\t})\n}\n","\nimport { of, combineLatestWith } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n//obs\nimport { rawEmojis$, setEmojis$, emojiSearchResults$, searchLoading$ } from './emojisStore';\n\nimport emojiData from './emoji-list.json';\n\nexport const getEmojis = () => {\n\trawEmojis$.next(emojiData);\n}\n\nexport const searchEmojis = (searchTerm: string) => {\n\tif (searchTerm === '') {\n\t\temojiSearchResults$.next([]);\n\t\tsearchLoading$.next(false);\n\t\treturn;\n\t}\n\n\tconst searchKeywords = searchTerm.toLowerCase().trim().split(' ');\n\n\tsetEmojis$.pipe(\n\t\tcombineLatestWith(of(searchKeywords)),\n\t\tmap(([emos, searchWords]) => {\n\t\t\tconst emoPoints = emos.map(emo => {\n\t\t\t\tlet relPoint = 0;\n\t\t\t\tlet directMatchCount = 0;\n\n\t\t\t\tconst emoKeywords = emo.keywordsArr;\n\t\t\t\tconst emoTitleTokens = emo.title.toLowerCase().trim().split(' ');\n\t\t\t\tsearchWords.forEach(sw => {\n\t\t\t\t\temoTitleTokens.forEach(emott => {\n\t\t\t\t\t\tif (emott === sw) {\n\t\t\t\t\t\t\tdirectMatchCount++;\n\t\t\t\t\t\t\trelPoint += 20 * directMatchCount;\n\t\t\t\t\t\t} else if (emott.startsWith(sw)) {\n\t\t\t\t\t\t\trelPoint += 10;\n\t\t\t\t\t\t} else if (emott.length > 2 && sw.startsWith(emott)) {\n\t\t\t\t\t\t\trelPoint += 5;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\temoKeywords.forEach(emok => {\n\t\t\t\t\t\tif (emok === sw) {\n\t\t\t\t\t\t\tdirectMatchCount++;\n\t\t\t\t\t\t\trelPoint += 20 * directMatchCount;\n\t\t\t\t\t\t} else if (emok.startsWith(sw)) {\n\t\t\t\t\t\t\trelPoint += 10;\n\t\t\t\t\t\t} else if (emok.length > 2 && sw.startsWith(emok)) {\n\t\t\t\t\t\t\trelPoint += 5;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t\treturn {\n\t\t\t\t\t...emo,\n\t\t\t\t\trelPoint\n\t\t\t\t};\n\t\t\t})\n\n\t\t\treturn emoPoints.filter(emo => emo.relPoint !== 0).sort((a, b) => b.relPoint - a.relPoint);\n\t\t})\n\t).subscribe(searchResults => {\n\t\temojiSearchResults$.next(searchResults);\n\t\tsearchLoading$.next(false);\n\t}).unsubscribe();\n}\n","\nimport React from 'react';\nimport cn from \"classnames/bind\";\n\n//types\nimport { IInputProps } from './Input.types';\n\n//styles\nimport s from './Input.module.css';\n\nconst Input: React.FC<IInputProps> = ({\n\ttype = 'text',\n\tvalue = '',\n\tsize = 'normal',\n\tplaceholder = '',\n\tisAutoFocus = false,\n\t//Functions are in props to avoid scope confusion\n\t...props\n}) => {\n\n\t//classnames\n\tconst cx = cn.bind(s);\n\tconst inputClasses = cx(s.Input, {\n\t\t[s.InputBig]: size === 'big'\n\t})\n\n\tconst onChange = (e: any) => {\n\t\tprops.onChange(e, e.target.value);\n\t}\n\n\treturn (\n\t\t<input\n\t\t\tvalue={value}\n\t\t\tclassName={inputClasses}\n\t\t\ttype=\"text\"\n\t\t\tonChange={e => onChange(e)}\n\t\t\tplaceholder={placeholder}\n\t\t\tautoFocus={isAutoFocus}\n\t\t/>\n\t)\n}\n\nexport default Input;\n","\nimport React, { useState, useEffect } from 'react';\nimport { useObservableState } from 'observable-hooks';\n\nimport { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n//actions\nimport { searchEmojis } from '../../store/emojis/emojisActions';\n\n//store\nimport { searchLoading$ } from '../../store/emojis/emojisStore';\n\n//comps\nimport Input from '../common/Input';\n\n//styles\nimport s from './EmojiSearcher.module.css';\n\nconst EmojiSearcher: React.FC = () => {\n\t//state\n\tconst [searchTerm, setSearchTerm] = useState('');\n\tconst [onSearch$] = useState(() => new Subject<string>());\n\tconst searchLoading = useObservableState(searchLoading$, false);\n\n\tuseEffect(() => {\n\t\tconst subscription = onSearch$.pipe(\n\t\t\tdebounceTime(1000),\n\t\t\tdistinctUntilChanged(),\n\t\t).subscribe(searchEmojis);\n\t\t//Destructor\n\t\treturn () => subscription.unsubscribe();\n\t}, [onSearch$])\n\n\t//funcs\n\tconst onSearchInputChange = (searchTerm: string) => {\n\t\tsetSearchTerm(searchTerm);\n\n\t\t//Reset if search is 0 to 2 letters\n\t\tif (searchTerm.length < 3) onSearch$.next('');\n\t\telse {\n\t\t\tsearchLoading$.next(true);\n\t\t\tonSearch$.next(searchTerm);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={s.EmojiSearcher}>\n\t\t\t<Input\n\t\t\t\tvalue={searchTerm}\n\t\t\t\tonChange={(e: any, value: string) => onSearchInputChange(value)}\n\t\t\t\tsize='big'\n\t\t\t\tplaceholder='Search Emojis...'\n\t\t\t\tisAutoFocus\n\t\t\t/>&nbsp;&nbsp;\n\t\t\t<span>{searchLoading ? 'Loading...' : ''}</span>\n\t\t</div>\n\t)\n}\n\nexport default EmojiSearcher;\n","\nimport React from 'react';\n\n//types\nimport { IEmojiItemProps } from './EmojiItem.types';\n\n//styles\nimport s from './EmojiItem.module.css';\n\nconst EmojiItem: React.FC<IEmojiItemProps> = ({\n\temoji\n}) => {\n\treturn (\n\t\t<li className={s.EmojiItem}>\n\t\t\t<div className={s.EmojiItemInner}>\n\t\t\t\t<span className={s.EmojiItemSymbol}>{emoji.symbol}</span>\n\t\t\t\t<span className={s.EmojiItemTitle}>{emoji.title}</span>\n\t\t\t</div>\n\t\t</li>\n\t)\n}\n\nexport default EmojiItem;\n","\nimport React from 'react';\nimport { useObservableState } from 'observable-hooks';\n\n//store\nimport { emojiSearchResults$ } from '../../store/emojis/emojisStore';\n\n//comps\nimport EmojiItem from './EmojiItem';\n\n//styles\nimport s from './EmojisList.module.css';\n\nconst EmojisList: React.FC = () => {\n\tconst emojis = useObservableState(emojiSearchResults$, []);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Found Emojis</h2>\n\t\t\t<ul className={s.EmojisList}>\n\t\t\t\t{emojis.map((emo, index) => <EmojiItem emoji={emo} key={`${emo.symbol}-${index}`} />)}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport default EmojisList;\n","import React, { useLayoutEffect } from 'react';\nimport './App.css';\n\n//actions\nimport { getEmojis } from './store/emojis/emojisActions';\n\n//comps\nimport EmojiSearcher from './components/EmojiSearcher/EmojiSearcher';\nimport EmojisList from './components/EmojisList/EmojisList';\n\nconst App: React.FC = () => {\n\t//effect\n\tuseLayoutEffect(() => {\n\t\tgetEmojis();\n\t});\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Emoji Search</h1>\n\t\t\t<EmojiSearcher />\n\t\t\t<EmojisList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}